{
  "openapi": "3.0.1",
  "info": {
    "title": "OData Service for Optiways Routes",
    "version": "1.0.0",
    "x-ms-generated-by": {
      "toolName": "Microsoft.OpenApi.OData",
      "toolVersion": "1.0.9.0"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5281/"
    }
  ],
  "paths": {
    "/Customer": {
      "description": "Provides operations to manage the collection of Customer entities.",
      "get": {
        "tags": [
          "Customer.Customer"
        ],
        "summary": "Get entities from Customer",
        "operationId": "Customer.Customer.ListCustomer",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Name",
                  "Name desc",
                  "PostCode",
                  "PostCode desc",
                  "City",
                  "City desc",
                  "CountryCode",
                  "CountryCode desc",
                  "ShipmentPostCode",
                  "ShipmentPostCode desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Name",
                  "PostCode",
                  "City",
                  "CountryCode",
                  "ShipmentPostCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Optiways.Routes.Models.Data.CustomerCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Customer/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "Customer.Customer"
        ],
        "summary": "Get the number of the resource",
        "operationId": "Customer.GetCount-bd46",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OptimizationResult": {
      "description": "Provides operations to manage the collection of OptimizationResult entities.",
      "get": {
        "tags": [
          "OptimizationResult.OptimizationResult"
        ],
        "summary": "Get entities from OptimizationResult",
        "operationId": "OptimizationResult.OptimizationResult.ListOptimizationResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "TotalRideDurationMinutes",
                  "TotalRideDurationMinutes desc",
                  "TotalRoutesDurationMinutes",
                  "TotalRoutesDurationMinutes desc",
                  "TotalRideDistanceKm",
                  "TotalRideDistanceKm desc",
                  "TotalRoutesCost",
                  "TotalRoutesCost desc",
                  "UnassignedShipments",
                  "UnassignedShipments desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "TotalRideDurationMinutes",
                  "TotalRoutesDurationMinutes",
                  "TotalRideDistanceKm",
                  "TotalRoutesCost",
                  "UnassignedShipments",
                  "Routes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Routes"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Optiways.Routes.Models.Output.Optimization.OptimizationResultCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "OptimizationResult.OptimizationResult"
        ],
        "summary": "Add new entity to OptimizationResult",
        "operationId": "OptimizationResult.OptimizationResult.CreateOptimizationResult",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.OptimizationResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.OptimizationResult"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/OptimizationResult/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "OptimizationResult.OptimizationResult"
        ],
        "summary": "Get the number of the resource",
        "operationId": "OptimizationResult.GetCount-2136",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrderDetails": {
      "description": "Provides operations to manage the collection of OrderDetails entities.",
      "get": {
        "tags": [
          "OrderDetails.OrderDetails"
        ],
        "summary": "Get entities from OrderDetails",
        "operationId": "OrderDetails.OrderDetails.ListOrderDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Date",
                  "Date desc",
                  "SerialNumber",
                  "SerialNumber desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Date",
                  "SerialNumber",
                  "Customer",
                  "Vehicle"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Customer",
                  "Vehicle"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Optiways.Routes.Models.Output.OrderDetailsCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrderDetails/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "OrderDetails.OrderDetails"
        ],
        "summary": "Get the number of the resource",
        "operationId": "OrderDetails.GetCount-9ba2",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrderItemDetails": {
      "description": "Provides operations to manage the collection of OrderItemDetails entities.",
      "get": {
        "tags": [
          "OrderItemDetails.OrderItemDetails"
        ],
        "summary": "Get entities from OrderItemDetails",
        "operationId": "OrderItemDetails.OrderItemDetails.ListOrderItemDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Id desc",
                  "Quantity",
                  "Quantity desc",
                  "Location",
                  "Location desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Id",
                  "Quantity",
                  "Location",
                  "Order"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "Order"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Optiways.Routes.Models.Output.OrderItemDetailsCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrderItemDetails/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "OrderItemDetails.OrderItemDetails"
        ],
        "summary": "Get the number of the resource",
        "operationId": "OrderItemDetails.GetCount-1bbb",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/UnitOfMeasurement": {
      "description": "Provides operations to manage the collection of UnitOfMeasurement entities.",
      "get": {
        "tags": [
          "UnitOfMeasurement.UnitOfMeasurement"
        ],
        "summary": "Get entities from UnitOfMeasurement",
        "operationId": "UnitOfMeasurement.UnitOfMeasurement.ListUnitOfMeasurement",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Code",
                  "Code desc",
                  "PackageSize",
                  "PackageSize desc",
                  "ItemId",
                  "ItemId desc",
                  "BaseQuantity",
                  "BaseQuantity desc",
                  "Length",
                  "Length desc",
                  "Width",
                  "Width desc",
                  "Height",
                  "Height desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "Code",
                  "PackageSize",
                  "ItemId",
                  "BaseQuantity",
                  "Length",
                  "Width",
                  "Height"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Optiways.Routes.Models.Data.UnitOfMeasurementCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/UnitOfMeasurement/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "UnitOfMeasurement.UnitOfMeasurement"
        ],
        "summary": "Get the number of the resource",
        "operationId": "UnitOfMeasurement.GetCount-912b",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicle": {
      "description": "Provides operations to manage the collection of Vehicle entities.",
      "get": {
        "tags": [
          "Vehicle.Vehicle"
        ],
        "summary": "Get entities from Vehicle",
        "operationId": "Vehicle.Vehicle.ListVehicle",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "SequenceNumber",
                  "SequenceNumber desc",
                  "Code",
                  "Code desc",
                  "Description",
                  "Description desc",
                  "Branch",
                  "Branch desc",
                  "Tonnage",
                  "Tonnage desc",
                  "Length",
                  "Length desc",
                  "Width",
                  "Width desc",
                  "Height",
                  "Height desc",
                  "DistrictCode",
                  "DistrictCode desc",
                  "PostalCode",
                  "PostalCode desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "SequenceNumber",
                  "Code",
                  "Description",
                  "Branch",
                  "Tonnage",
                  "Length",
                  "Width",
                  "Height",
                  "DistrictCode",
                  "PostalCode"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "form",
            "explode": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Optiways.Routes.Models.Data.VehicleCollectionResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Vehicle/$count": {
      "description": "Provides operations to count the resources in the collection.",
      "get": {
        "tags": [
          "Vehicle.Vehicle"
        ],
        "summary": "Get the number of the resource",
        "operationId": "Vehicle.GetCount-d907",
        "parameters": [
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ODataCountResponse"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/$metadata": {
      "description": "Provides operations to obtain the service metadata.",
      "get": {
        "summary": "Get OData metadata (CSDL) document",
        "operationId": "Get.Metadata",
        "responses": {
          "200": {
            "description": "Retrieved metadata document",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Optiways.Routes.Models.Output.Optimization.OptimizationResult": {
        "title": "OptimizationResult",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "TotalRideDurationMinutes": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "TotalRoutesDurationMinutes": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "TotalRideDistanceKm": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "TotalRoutesCost": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "UnassignedShipments": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.UnassignedShipment"
                },
                {
                  "type": "object",
                  "nullable": true
                }
              ]
            }
          },
          "Routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Route"
            },
            "x-ms-navigationProperty": true
          }
        }
      },
      "Optiways.Routes.Models.Data.Customer": {
        "title": "Customer",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "PostCode": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "ShipmentPostCode": {
            "type": "string"
          }
        }
      },
      "Optiways.Routes.Models.Output.OrderItemDetails": {
        "title": "OrderItemDetails",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Quantity": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Location": {
            "type": "string"
          },
          "Order": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Data.Order"
          }
        }
      },
      "Optiways.Routes.Models.Output.OrderDetails": {
        "title": "OrderDetails",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Date": {
            "type": "string"
          },
          "SerialNumber": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Customer": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Data.Customer"
          },
          "Vehicle": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Data.Vehicle"
          }
        }
      },
      "Optiways.Routes.Models.Data.UnitOfMeasurement": {
        "title": "UnitOfMeasurement",
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "PackageSize": {
            "type": "string"
          },
          "ItemId": {
            "type": "string"
          },
          "BaseQuantity": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Length": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Width": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Height": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          }
        }
      },
      "Optiways.Routes.Models.Data.Vehicle": {
        "title": "Vehicle",
        "type": "object",
        "properties": {
          "SequenceNumber": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Branch": {
            "type": "string",
            "nullable": true
          },
          "Tonnage": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Length": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Width": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Height": {
            "oneOf": [
              {
                "type": "number",
                "format": "float"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "DistrictCode": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Route": {
        "title": "Route",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "RouteSections": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.RouteSection"
                },
                {
                  "type": "object",
                  "nullable": true
                }
              ]
            }
          },
          "RouteDurationMinutes": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "RideDurationMinutes": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "RideDistanceKm": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Cost": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Vehicle": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Vehicle"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Vehicle": {
        "title": "Vehicle",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "StartLocation": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Address"
          },
          "EndLocation": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Address"
          },
          "VehicleType": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.VehicleType"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.VehicleType": {
        "title": "VehicleType",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Capacity": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "CostPerMinuteOfDrive": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "CostPerKm": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "FixedCost": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "Area": {
            "type": "string"
          },
          "AddressString": {
            "type": "string"
          },
          "Latitude": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "Longitude": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.RouteSection": {
        "title": "RouteSection",
        "type": "object",
        "properties": {
          "SourceAddress": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Address"
          },
          "TargetAddress": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Address"
          },
          "ArriveTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "StartLoadTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "StartRideTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "EndRideTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "StartDropTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "EndTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "PickupDelaySeconds": {
            "type": "integer",
            "format": "int64"
          },
          "DropDelaySeconds": {
            "type": "integer",
            "format": "int64"
          },
          "PickedUpShipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Shipment"
            },
            "x-ms-navigationProperty": true
          },
          "DroppedShipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Shipment"
            },
            "x-ms-navigationProperty": true
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Shipment": {
        "title": "Shipment",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "FromAddress": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Address"
          },
          "ToAddress": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Address"
          },
          "PickupTimeWindow": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.TimeWindow"
          },
          "DeliveryTimeWindow": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.TimeWindow"
          },
          "Load": {
            "oneOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ReferenceNumeric"
              }
            ]
          },
          "PickupTimeSeconds": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "DropDelaySeconds": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.TimeWindow": {
        "title": "TimeWindow",
        "type": "object",
        "properties": {
          "Start": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          },
          "End": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.UnassignedShipment": {
        "title": "UnassignedShipment",
        "type": "object",
        "properties": {
          "Reason": {
            "type": "string"
          },
          "Shipment": {
            "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Shipment"
          }
        }
      },
      "Optiways.Routes.Models.Data.Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Date": {
            "type": "string"
          },
          "CustomerId": {
            "type": "string"
          },
          "SerialNumber": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "VehicleId": {
            "type": "string"
          }
        }
      },
      "Default.ODataErrors.ODataError": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Default.ODataErrors.MainError"
          }
        }
      },
      "Default.ODataErrors.MainError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Default.ODataErrors.ErrorDetails"
            }
          },
          "innererror": {
            "$ref": "#/components/schemas/Default.ODataErrors.InnerError"
          }
        }
      },
      "Default.ODataErrors.ErrorDetails": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Default.ODataErrors.InnerError": {
        "type": "object",
        "description": "The structure of this object is service-specific"
      },
      "ODataCountResponse": {
        "type": "integer",
        "format": "int32"
      },
      "Optiways.Routes.Models.Output.Optimization.OptimizationResultCollectionResponse": {
        "title": "Collection of OptimizationResult",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.OptimizationResult"
            }
          }
        }
      },
      "Optiways.Routes.Models.Data.CustomerCollectionResponse": {
        "title": "Collection of Customer",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Data.Customer"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.OrderItemDetailsCollectionResponse": {
        "title": "Collection of OrderItemDetails",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.OrderItemDetails"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.OrderDetailsCollectionResponse": {
        "title": "Collection of OrderDetails",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.OrderDetails"
            }
          }
        }
      },
      "Optiways.Routes.Models.Data.UnitOfMeasurementCollectionResponse": {
        "title": "Collection of UnitOfMeasurement",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Data.UnitOfMeasurement"
            }
          }
        }
      },
      "Optiways.Routes.Models.Data.VehicleCollectionResponse": {
        "title": "Collection of Vehicle",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Data.Vehicle"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.RouteCollectionResponse": {
        "title": "Collection of Route",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Route"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.ShipmentCollectionResponse": {
        "title": "Collection of Shipment",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.Shipment"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.UnassignedShipmentCollectionResponse": {
        "title": "Collection of Optiways.Routes.Models.Output.Optimization.UnassignedShipment",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.UnassignedShipment"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.RouteSectionCollectionResponse": {
        "title": "Collection of Optiways.Routes.Models.Output.Optimization.RouteSection",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.RouteSection"
            }
          }
        }
      },
      "StringCollectionResponse": {
        "title": "Collection of string",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReferenceUpdate": {
        "type": "object",
        "properties": {
          "@odata.id": {
            "type": "string"
          },
          "@odata.type": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferenceCreate": {
        "type": "object",
        "properties": {
          "@odata.id": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ReferenceNumeric": {
        "enum": [
          "-INF",
          "INF",
          "NaN"
        ]
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Default.ODataErrors.ODataError"
            }
          }
        }
      },
      "ODataCountResponse": {
        "description": "The count of the resource",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/ODataCountResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.OptimizationResultCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.OptimizationResultCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Data.CustomerCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Data.CustomerCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.OrderItemDetailsCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.OrderItemDetailsCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.OrderDetailsCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.OrderDetailsCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Data.UnitOfMeasurementCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Data.UnitOfMeasurementCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Data.VehicleCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Data.VehicleCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.RouteCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.RouteCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.ShipmentCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.ShipmentCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.UnassignedShipmentCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.UnassignedShipmentCollectionResponse"
            }
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.RouteSectionCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Optiways.Routes.Models.Output.Optimization.RouteSectionCollectionResponse"
            }
          }
        }
      },
      "StringCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StringCollectionResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "Optiways.Routes.Models.Output.Optimization.OptimizationResult": {
        "value": {
          "Id": "String (identifier)",
          "Routes": [
            {
              "@odata.type": "Optiways.Routes.Models.Output.Optimization.Route"
            }
          ],
          "TotalRideDistanceKm": 0,
          "TotalRideDurationMinutes": 0,
          "TotalRoutesCost": 0,
          "TotalRoutesDurationMinutes": 0,
          "UnassignedShipments": [
            {
              "@odata.type": "Optiways.Routes.Models.Output.Optimization.UnassignedShipment"
            }
          ]
        }
      },
      "Optiways.Routes.Models.Data.Customer": {
        "value": {
          "City": "String",
          "CountryCode": "String",
          "Id": "String (identifier)",
          "Name": "String",
          "PostCode": "String",
          "ShipmentPostCode": "String"
        }
      },
      "Optiways.Routes.Models.Output.OrderItemDetails": {
        "value": {
          "Id": "String (identifier)",
          "Location": "String",
          "Order": {
            "@odata.type": "Optiways.Routes.Models.Data.Order"
          },
          "Quantity": 0
        }
      },
      "Optiways.Routes.Models.Output.OrderDetails": {
        "value": {
          "Customer": {
            "@odata.type": "Optiways.Routes.Models.Data.Customer"
          },
          "Date": "String",
          "Id": "String (identifier)",
          "SerialNumber": 0,
          "Vehicle": {
            "@odata.type": "Optiways.Routes.Models.Data.Vehicle"
          }
        }
      },
      "Optiways.Routes.Models.Data.UnitOfMeasurement": {
        "value": {
          "BaseQuantity": 0,
          "Code": "String (identifier)",
          "Height": 0,
          "ItemId": "String",
          "Length": 0,
          "PackageSize": "String (identifier)",
          "Width": 0
        }
      },
      "Optiways.Routes.Models.Data.Vehicle": {
        "value": {
          "Branch": "String",
          "Code": "String",
          "Description": "String",
          "DistrictCode": "String",
          "Height": 0,
          "Length": 0,
          "PostalCode": "String",
          "SequenceNumber": 0,
          "Tonnage": 0,
          "Width": 0
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Route": {
        "value": {
          "Cost": 0,
          "Id": "String (identifier)",
          "RideDistanceKm": 0,
          "RideDurationMinutes": 0,
          "RouteDurationMinutes": 0,
          "RouteSections": [
            {
              "@odata.type": "Optiways.Routes.Models.Output.Optimization.RouteSection"
            }
          ],
          "Vehicle": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Vehicle"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Vehicle": {
        "value": {
          "EndLocation": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Address"
          },
          "Id": "String (identifier)",
          "StartLocation": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Address"
          },
          "VehicleType": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.VehicleType"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.VehicleType": {
        "value": {
          "Capacity": 0,
          "CostPerKm": 0,
          "CostPerMinuteOfDrive": 0,
          "FixedCost": 0,
          "Id": "String (identifier)",
          "Name": "String"
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Address": {
        "value": {
          "AddressString": "String",
          "Area": "String",
          "Latitude": 0,
          "Longitude": 0
        }
      },
      "Optiways.Routes.Models.Output.Optimization.RouteSection": {
        "value": {
          "ArriveTime": "0001-01-01T00:00:00.0000000+00:00",
          "DropDelaySeconds": 0,
          "DroppedShipments": [
            {
              "@odata.type": "Optiways.Routes.Models.Output.Optimization.Shipment"
            }
          ],
          "EndRideTime": "0001-01-01T00:00:00.0000000+00:00",
          "EndTime": "0001-01-01T00:00:00.0000000+00:00",
          "PickedUpShipments": [
            {
              "@odata.type": "Optiways.Routes.Models.Output.Optimization.Shipment"
            }
          ],
          "PickupDelaySeconds": 0,
          "SourceAddress": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Address"
          },
          "StartDropTime": "0001-01-01T00:00:00.0000000+00:00",
          "StartLoadTime": "0001-01-01T00:00:00.0000000+00:00",
          "StartRideTime": "0001-01-01T00:00:00.0000000+00:00",
          "TargetAddress": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Address"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.Shipment": {
        "value": {
          "DeliveryTimeWindow": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.TimeWindow"
          },
          "DropDelaySeconds": 0,
          "FromAddress": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Address"
          },
          "Id": "String (identifier)",
          "Load": 0,
          "Name": "String",
          "PickupTimeSeconds": 0,
          "PickupTimeWindow": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.TimeWindow"
          },
          "ToAddress": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Address"
          }
        }
      },
      "Optiways.Routes.Models.Output.Optimization.TimeWindow": {
        "value": {
          "End": "0001-01-01T00:00:00.0000000+00:00",
          "Start": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "Optiways.Routes.Models.Output.Optimization.UnassignedShipment": {
        "value": {
          "Reason": "String",
          "Shipment": {
            "@odata.type": "Optiways.Routes.Models.Output.Optimization.Shipment"
          }
        }
      },
      "Optiways.Routes.Models.Data.Order": {
        "value": {
          "CustomerId": "String",
          "Date": "String",
          "Id": "String (identifier)",
          "SerialNumber": 0,
          "VehicleId": "String"
        }
      }
    },
    "requestBodies": {
      "refPostBody": {
        "description": "New navigation property ref value",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceCreate"
            }
          }
        },
        "required": true
      },
      "refPutBody": {
        "description": "New navigation property ref values",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceUpdate"
            }
          }
        },
        "required": true
      }
    }
  },
  "tags": [
    {
      "name": "Customer.Customer",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "OptimizationResult.OptimizationResult",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "OrderDetails.OrderDetails",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "OrderItemDetails.OrderItemDetails",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "UnitOfMeasurement.UnitOfMeasurement",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "Vehicle.Vehicle",
      "x-ms-docs-toc-type": "page"
    }
  ]
}
